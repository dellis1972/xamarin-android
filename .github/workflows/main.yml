# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Disabled cos we do not have enough disk space.
  # build_windows:
  #   name: BuildWindows
  #   # The type of runner that the job will run on
  #   runs-on: windows-latest

  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: recursive
  #         fetch-depth: 0
  #     - name: Install .NET
  #       uses: actions/setup-dotnet@v2
  #       with:
  #         dotnet-version: |
  #           6.0.x
  #           7.0.x
  #         include-prerelease: true

  #     - name: Build
  #       run: .\build.cmd
  #       env:
  #         CONFIGURATION: Release
  #         PREPARE_CI: 1
  #         PREPARE_AUTOPROVISION: 1

  # Disabled cos it times out and there are diskspace issues.
  # build_unix:
  #   name: BuildUnix
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest

  #   # Steps represent a sequence of tasks that will be executed as part of the job
  #   steps:
  #     # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: recursive
  #         fetch-depth: 0
  #     - name: Install .NET
  #       uses: actions/setup-dotnet@v2
  #       with:
  #         dotnet-version: |
  #           6.0.x
  #           7.0.x
  #         include-prerelease: true

  #     - name: Build
  #       run: ./build.sh
  #       env:
  #         CONFIGURATION: Release
  #         PREPARE_CI: 1
  #         PREPARE_AUTOPROVISION: 1

  #     - name: Create Installers
  #       run: make package-deb
  #       env:
  #         CONFIGURATION: Release
  #         PREPARE_CI: 1
  #         PREPARE_AUTOPROVISION: 1

  build_macos:
    name: BuildMacOS
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0 # we need this to get the full history so we can calculate the version info.
      - name: Install .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: |
            6.0.x
            7.0.x
          include-prerelease: true

      - name: Prepare
        run: ./build.sh Prepare
        env:
          CONFIGURATION: Release
          PREPARE_CI: 1
          PREPARE_AUTOPROVISION: 1

      - name: Build
        run: ./build.sh Build
        env:
          CONFIGURATION: Release
          PREPARE_CI: 1
          PREPARE_AUTOPROVISION: 1

      - name: Create Installers
        run: ./build.sh Installers
        env:
          CONFIGURATION: Release
          PREPARE_CI: 1
          PREPARE_AUTOPROVISION: 1

      - name: Create Release
        id: create-release 
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: ./bin/BuildRelease/Xamarin.Android.Sdk-OSS*

        
